server_tokens off;

# Rewrite http://www.{{ domain_name }} to https://{{ domain_name }}
server {
    listen [::]:80;
    listen 80;
    server_name  www.{{ domain_name }};
    rewrite ^ https://{{ domain_name }}$request_uri? permanent;
}


# Rewrite http://{{ domain_name }} to https://{{ domain_name }}
server {
    listen [::]:80;
    listen 80;
    server_name {{ domain_name }} ;
    rewrite ^ https://$server_name$request_uri? permanent;

    # letsencrypt configuration
    location /.well-known/acme-challenge {
        root /var/www/letsencrypt;
        try_files $uri $uri/ =404;
    }
}

# Rewrite https://www.{{ domain_name }} to https://{{ domain_name }}
server {
    listen [::]:443;
    listen 443;
    server_name  www.{{ domain_name }};
    rewrite ^ https://{{ domain_name }}.nl$request_uri? permanent;
}

# And now the server configuration
server {
    listen 443 ssl default deferred;
    listen [::]:443 ssl default deferred;
    server_name {{ domain_name }};

    # config to enable HSTS(HTTP Strict Transport Security)
    add_header Strict-Transport-Security "max-age=63072000; includeSubdomains;";

    ssl on;
    ssl_certificate         /etc/letsencrypt/live/www.{{ domain_name }}/fullchain.pem;
    ssl_certificate_key     /etc/letsencrypt/live/www.{{ domain_name }}/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/www.{{ domain_name }}/fullchain.pem;

    ssl_session_cache shared:SSL:50m;
    ssl_session_timeout 5m;
    ssl_stapling on;
    ssl_stapling_verify on;

    ssl_protocols TLSv1.1 TLSv1.2;
    ssl_ciphers "ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4";

    ssl_dhparam /etc/nginx/dhparams.pem;
    ssl_prefer_server_ciphers on;

    root /var/www/{{ domain_name }};
    index index.html index.htm;

    location / {
        try_files $uri $uri/ =404;
    }
}
